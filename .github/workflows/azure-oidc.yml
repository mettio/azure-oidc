name: Test Azure OIDC
on:
  push:
    branches: [ "main" ]
    # paths: 
    #   - 'azure-oidc.yml'
  pull_request: 
    branches: none  
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Az login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    - name: 'Checkout'
      uses: actions/checkout@v1
    - name: 'Build image in ACR'
      uses: azure/CLI@v1
      with:
        azcliversion: 2.44.0
        inlineScript: |
          az acr build -r ${{ secrets.ARM_ACR_NAME }} -t service:${{ github.sha }} --build-arg PORT=3000 --target production --file Dockerfile .
    - name: 'Deploy image'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.ARM_APPS_NAME }}
        images: '${{ secrets.ARM_ACR_NAME }}.azurecr.io/service:${{ github.sha }}'
    - name: AZ logout
      run: |
        az logout
    
    - name: frontend
      uses: AutoModality/action-clean@v1
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Build And Deploy
      id: builddeploy
      uses: Azure/static-web-apps-deploy@5c50db0011c6423f073843e7e22c3d0cb6c53920
      with:
        # Master will be a prod deploy, all other will be preview deployments to branch url
        production_branch: main
        azure_static_web_apps_api_token: ${{ secrets.AZ_SWA_DEPLOY_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "frontend"
        app_artifact_location: "dist"
        output_location: "dist"
        skip_app_build: false
        app_build_command: npm run build
        skip_api_build: false
      env:
        VITE_STATION_URL: ${{ secrets.VITE_STATION_URL }}
  
